version: '3.8'

services:
  zookeeper:
    image: bitnami/zookeeper:3.9
    container_name: zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"
    volumes:
      - zookeeper_data:/bitnami/zookeeper
    networks:
      - flink-net

  kafka:
    image: bitnami/kafka:3.7
    container_name: kafka
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,PLAINTEXT_HOST://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=false
    volumes:
      - kafka_data:/bitnami/kafka
    depends_on:
      - zookeeper
    networks:
      - flink-net

  kafka-topics-initializer:
    image: bitnami/kafka:3.7
    container_name: kafka-topics-initializer
    depends_on:
      - kafka
    restart: on-failure
    command: >
      bash -c "
      echo 'Waiting for Kafka to be ready...';
      while ! kafka-topics.sh --bootstrap-server kafka:9092 --list; do
        sleep 1;
      done;
      echo 'Creating topics...';
      kafka-topics.sh --bootstrap-server kafka:9092 --create --if-not-exists --topic earthquakes-raw --partitions 1 --replication-factor 1;
      kafka-topics.sh --bootstrap-server kafka:9092 --create --if-not-exists --topic earthquakes-processed --partitions 1 --replication-factor 1;
      kafka-topics.sh --bootstrap-server kafka:9092 --create --if-not-exists --topic earthquakes-strong --partitions 1 --replication-factor 1;
      echo 'Topics created successfully!';
      exit 0
      "
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
    networks:
      - flink-net

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8090:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local-kafka
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
    depends_on:
      - kafka
    networks:
      - flink-net

  jobmanager:
    image: flink:1.18.1-scala_2.12
    container_name: jobmanager
    hostname: jobmanager
    ports:
      - "8091:8081"
    command: jobmanager
    environment:
      FLINK_PROPERTIES: |
        jobmanager.rpc.address: jobmanager
        taskmanager.numberOfTaskSlots: 2
    volumes:
      - ./flink-jobs:/opt/flink/jobs
    networks:
      - flink-net

  taskmanager:
    image: flink:1.18.1-scala_2.12
    container_name: taskmanager
    depends_on:
      - jobmanager
    command: taskmanager
    environment:
      FLINK_PROPERTIES: |
        jobmanager.rpc.address: jobmanager
        taskmanager.numberOfTaskSlots: 2
    networks:
      - flink-net

volumes:
  zookeeper_data:
  kafka_data:

networks:
  flink-net:
    driver: bridge